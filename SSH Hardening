### 🔐 What is **SSH Hardening**?

**“SSH hardening”** means making your SSH service **more secure**.
SSH (Secure Shell) is like a door to your server. Hardening means adding locks, security cameras, and alarm systems to this door, so only trusted people can open it.

---

### ✅ In Simple Terms:

* SSH = the way you remotely connect to a server.
* Hardening = making it harder for hackers to break in.

---

### ⚡️ Examples of SSH Hardening:

1. **Use Key-based Authentication** 🔑

   * Instead of using a password, use an SSH key.
   * It's like a very strong, unique key only you have.

2. **Disable Password Login** 🙅‍♀️

   * So hackers can’t try guessing your password.

3. **Change the Default SSH Port** 🎛️

   * Default is **22**. Changing it makes random attacks less common.

4. **Limit User Access** 👥

   * Only certain trusted usernames can SSH in.

5. **Use a Firewall** 🧱

   * Block SSH access from unwanted IP addresses.

6. **Keep SSH Updated** 🛡️

   * Always use the latest version for the best security.

---

### 🔥 The Goal:

SSH hardening is like making sure:
✅ Only trusted people can open the door.
✅ Even if a hacker finds the door, it’s too strong for them.

---------------------------------------------------------------

Step‑by‑step process of SSH hardening you can follow for any server, explained in simple terms:

---

## 🔐 1️⃣ **Use SSH Keys Instead of Passwords**

✅ Generate an SSH key (`ssh-keygen`)
✅ Copy your **public** key to the server (`~/.ssh/authorized_keys`)
❌ Disable password login in the SSH configuration

Edit `/etc/ssh/sshd_config`:

```text
PasswordAuthentication no
```

---

## 🕵️ 2️⃣ **Change the Default SSH Port**

✅ Pick a port number that’s NOT 22 (e.g., 2222)
Edit `sshd_config`:

```text
Port 2222
```

---

## 👥 3️⃣ **Restrict User Access**

✅ Only allow certain trusted users or groups.
Edit `sshd_config`:

```text
AllowUsers youruser
```

---

## ⏳ 4️⃣ **Set Idle Session Timeout**

✅ Disconnect idle SSH sessions after a set period.
Edit `sshd_config`:

```text
ClientAliveInterval 300
ClientAliveCountMax 0
```

---

## 🛡️ 5️⃣ **Use Firewall Rules**

✅ Block SSH access from unwanted IP addresses.
For example, using **ufw**:

```bash
ufw allow from <your_ip> to any port 22
ufw enable
```

---

## 🗝️ 6️⃣ **Disable Root Login**

✅ Never SSH directly as root.
Edit `sshd_config`:

```text
PermitRootLogin no
```

---

## 🔄 7️⃣ **Update and Maintain SSH**

✅ Regularly apply security patches and update OpenSSH.

```bash
sudo apt update && sudo apt upgrade -y
```

---

## ⚡️ Final Result

✅ Strong SSH keys only
✅ No password access
✅ Limited user access
✅ Port changed
✅ Firewall configured
✅ Idle connections dropped
✅ Regularly patched SSH service

---
